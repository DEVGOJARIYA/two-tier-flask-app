
name: CI/CD Pipeline to EC2 (Docker Image Build + Deploy)

on:
  push:
    branches: [main]  # Trigger pipeline on push to main branch

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest  # Docker image tag

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (optional for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          # Build the Docker image with the defined image name
          docker build -t $DOCKER_IMAGE .

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          # Push the Docker image to Docker Hub
          docker push $DOCKER_IMAGE

      # Step 6: Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}           # EC2 instance's IP or DNS
          username: ${{ secrets.EC2_USER }}       # EC2 username (e.g., ec2-user or ubuntu)
          key: ${{ secrets.EC2_SSH_KEY }}        # SSH private key (content of .pem file)
          script: |
            # Pull the latest Docker image for Flask app from Docker Hub
            docker pull $DOCKER_IMAGE

            # Pull MySQL image from Docker Hub
            docker pull mysql:5.7

            # Run MySQL container (if you want MySQL in Docker on EC2)
            docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops \
              -e MYSQL_USER=admin -e MYSQL_PASSWORD=admin -p 3306:3306 mysql:5.7

            # Stop and remove the old Flask app container (if it's running)
            docker stop flask-app || true
            docker rm flask-app || true

            # Run Flask app container and link it to the MySQL container
            docker run -d --name flask-app -p 5050:5000 \
              -e MYSQL_HOST=mysql  \
              -e MYSQL_USER=root \
              -e MYSQL_PASSWORD=root \
              -e MYSQL_DB=devops \
              $DOCKER_IMAGE

