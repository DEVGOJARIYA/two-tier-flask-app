name: CI/CD Pipeline to EC2 (Docker Image Build + Deploy)

on:
  push:
    branches: [master]  # Trigger pipeline on push to master branch

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest  # Docker image tag

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE .

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push $DOCKER_IMAGE

      # Step 6: Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Use same image as in build (already defined in env)
            export DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest

            docker pull $DOCKER_IMAGE
            docker pull mysql:5.7

            docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=devops \
              -e MYSQL_USER=admin -e MYSQL_PASSWORD=admin -p 3306:3306 mysql:5.7

            docker stop flask-app || true
            docker rm flask-app || true

            docker run -d --name flask-app -p 5050:5000 \
              -e MYSQL_HOST=mysql \
              -e MYSQL_USER=root \
              -e MYSQL_PASSWORD=root \
              -e MYSQL_DB=devops \
              $DOCKER_IMAGE
